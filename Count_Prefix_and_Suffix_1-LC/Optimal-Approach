#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Helper function to check prefix and suffix
bool isPrefixAndSuffix(const string& prefixSuffix, const string& target) {
    int len = prefixSuffix.length();
    int targetLen = target.length();

    // Check prefix
    if (targetLen < len || target.substr(0, len) != prefixSuffix) return false;

    // Check suffix
    if (target.substr(targetLen - len) != prefixSuffix) return false;

    return true;
}

int countPrefixSuffixPairsOptimized(const vector<string>& words) {
    int n = words.size();
    int count = 0;

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (isPrefixAndSuffix(words[i], words[j])) {
                count++;
            }
        }
    }
    return count;
}

int main() {
    vector<string> words = {"a", "aba", "ababa", "aa"};
    cout << "Optimized Result: " << countPrefixSuffixPairsOptimized(words) << endl;
    return 0;
}
